<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Media Page</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        .hide-scroll-bar {
          -ms-overflow-style: none; /* IE and Edge */
          scrollbar-width: none; /* Firefox */
        }
        .hide-scroll-bar::-webkit-scrollbar {
          display: none; /* Safari and Chrome */
        }
        .genre-card {
            position: relative;
            overflow: hidden;
        }
        .genre-card img {
            transition: filter 0.3s ease;
        }
        .genre-card:hover img {
            filter: brightness(70%);
        }
        .genre-card .genre-name {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 0.3s ease;
            background-color: rgba(0, 0, 0, 0.7);
            padding: 10px;
            border-radius: 5px;
            color: white;
        }
        .genre-card:hover .genre-name {
            opacity: 1;
        }
    </style>
</head>
<body class="bg-gray-100">
    
    <!-- Navbar -->
    <%- include('partials/navbar.ejs') %>

    <!-- Static Image with Text -->
    <div class="relative isolate overflow-hidden bg-gray-900 h-screen">
        <img src="https://images.pexels.com/photos/2507025/pexels-photo-2507025.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1" alt="Background Image" class="absolute inset-0 h-full w-full object-cover">
        <div class="absolute inset-0 bg-black opacity-50"></div>
        <div class="relative z-10 flex items-center justify-center h-full">
            <div class="text-center text-white px-4">
                <h1 class="text-4xl sm:text-6xl font-bold mb-4">Explore Our Media Collection</h1>
                <p class="text-lg sm:text-2xl">Discover new movies and TV shows</p>
            </div>
        </div>
    </div>

    <!-- Genres Section -->
    <div class="flex flex-col bg-white m-auto p-auto">
        <h1 class="py-5 lg:px-20 md:px-10 px-5 lg:mx-0 md:mx-0 mx-5 font-bold text-4xl text-gray-800">
            Movies Genre
        </h1>
        <div class="flex overflow-x-auto pb-10 hide-scroll-bar lg:mx-0 md:mx-0 mx-5">
            <div class="flex flex-nowrap" id="movieGenres">
                <!-- Movie genres will be inserted here dynamically -->
            </div>
        </div>
    </div>

    <!-- TV Shows Section -->
    <div class="flex flex-col bg-white m-auto p-auto">
        <h1 class="py-5 lg:px-20 md:px-10 px-5 lg:mx-0 md:mx-0 mx-5 font-bold text-4xl text-gray-800">
            TV Shows Genre
        </h1>
        <div class="flex overflow-x-auto pb-10 hide-scroll-bar lg:mx-0 md:mx-0 mx-5">
            <div class="flex flex-nowrap" id="tvShowGenres">
                <!-- TV show genres will be inserted here dynamically -->
            </div>
        </div>
    </div>

    <!-- Footer -->
    <%- include('partials/footer.ejs') %>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                // Fetch movie genres
                const movieGenresResponse = await fetch('/api/movies/genres');
                if (!movieGenresResponse.ok) {
                    throw new Error('Network response was not ok');
                }
                const movieGenres = await movieGenresResponse.json();
                const movieGenresContainer = document.getElementById('movieGenres');

                // Insert movie genres
                movieGenres.forEach(genre => {
                    const genreDiv = document.createElement('div');
                    genreDiv.className = 'inline-block px-3';
                    genreDiv.innerHTML = `
                        <a href="/movieslist?genreId=${genre.id}">
                            <div class="w-64 h-64 max-w-xs overflow-hidden rounded-lg shadow-md bg-white hover:shadow-xl transition-shadow duration-300 ease-in-out genre-card relative">
                                <img src="${genre.imagePath}" alt="${genre.name}" class="w-full h-full object-cover">
                                <div class="genre-name">${genre.name}</div>
                            </div>
                        </a>
                    `;
                    movieGenresContainer.appendChild(genreDiv);
                });

                // Fetch TV show genres
                const tvShowGenresResponse = await fetch('/api/tv/genres');
                if (!tvShowGenresResponse.ok) {
                    throw new Error('Network response was not ok');
                }
                const tvShowGenres = await tvShowGenresResponse.json();
                const tvShowGenresContainer = document.getElementById('tvShowGenres');

                // Insert TV show genres
                tvShowGenres.forEach(genre => {
                    const genreDiv = document.createElement('div');
                    genreDiv.className = 'inline-block px-3';
                    genreDiv.innerHTML = `
                        <a href="/tvshows?genreId=${genre.id}">
                            <div class="w-64 h-64 max-w-xs overflow-hidden rounded-lg shadow-md bg-white hover:shadow-xl transition-shadow duration-300 ease-in-out genre-card">
                                <img src="${genre.imagePath}" alt="${genre.name}" class="w-full h-full object-cover">
                                <div class="genre-name">${genre.name}</div>
                            </div>
                        </a>
                    `;
                    tvShowGenresContainer.appendChild(genreDiv);
                });
            } catch (error) {
                console.error('Error fetching genres:', error);
                alert('An error occurred while fetching genres. Please try again later.');
            }
        });
    </script>
</body>
</html>
